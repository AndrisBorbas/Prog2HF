<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_compatibility_8h" kind="file">
    <compoundname>Compatibility.h</compoundname>
    <includes local="no">iostream</includes>
    <includes refid="schtring_8h" local="yes">schtring.h</includes>
    <includedby refid="_parts_8h" local="yes">C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Parts.h</includedby>
    <includedby refid="_compatibility_8cpp" local="yes">C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Compatibility.cpp</includedby>
    <incdepgraph>
      <node id="63">
        <label>C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Compatibility.h</label>
        <link refid="Compatibility.h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>schtring.h</label>
        <link refid="schtring_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>iostream</label>
      </node>
      <node id="67">
        <label>ctype.h</label>
      </node>
      <node id="66">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="71">
        <label>C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/atest.h</label>
        <link refid="atest_8h"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Compatibility.h</label>
        <link refid="Compatibility.h"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/main.h</label>
        <link refid="main_8h"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/atest.cpp</label>
        <link refid="atest_8cpp"/>
      </node>
      <node id="74">
        <label>C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Inventory.h</label>
        <link refid="_inventory_8h"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Inventory.cpp</label>
        <link refid="_inventory_8cpp"/>
      </node>
      <node id="69">
        <label>C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Parts.h</label>
        <link refid="_parts_8h"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Builds.h</label>
        <link refid="_builds_8h"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Compatibility.cpp</label>
        <link refid="_compatibility_8cpp"/>
      </node>
      <node id="78">
        <label>C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Parts.cpp</label>
        <link refid="_parts_8cpp"/>
      </node>
      <node id="73">
        <label>C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="77">
        <label>C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Builds.cpp</label>
        <link refid="_builds_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_compatibility_list" prot="public">CompatibilityList</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="_compatibility_8h_1a4dba78c90980468354692db49af6847b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const CompatibilityList &amp;cl)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="class_compatibility_list" kindref="compound">CompatibilityList</ref> &amp;</type>
          <declname>cl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Compatibility.h" line="41" column="1" bodyfile="C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Compatibility.cpp" bodystart="74" bodyend="80"/>
        <references refid="class_compatibility_list_1a1fbb37dc96c89c113a03624445480a68" compoundref="_compatibility_8h" startline="16" endline="16">CompatibilityList::get_length</references>
        <references refid="class_compatibility_list_1abb51e26ec0d83fff36553fe0e6712c48" compoundref="_compatibility_8h" startline="18" endline="18">CompatibilityList::get_listp</references>
      </memberdef>
      <memberdef kind="function" id="_compatibility_8h_1ae30040cca6deee0e7e5b61b08de81637" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
            <defval><ref refid="class_string" kindref="compound">String</ref></defval>
          </param>
          <param>
            <type>typename T2</type>
            <defval><ref refid="class_string" kindref="compound">String</ref></defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool compatible</definition>
        <argsstring>(T1 is, T2 with, CompatibilityList cl)</argsstring>
        <name>compatible</name>
        <param>
          <type>T1</type>
          <declname>is</declname>
        </param>
        <param>
          <type>T2</type>
          <declname>with</declname>
        </param>
        <param>
          <type><ref refid="class_compatibility_list" kindref="compound">CompatibilityList</ref></type>
          <declname>cl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Compatibility.h" line="44" column="1" bodyfile="C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Compatibility.h" bodystart="44" bodyend="57"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="schtring_8h" kindref="compound">schtring.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="class_compatibility_list" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_compatibility_list" kindref="compound">CompatibilityList</ref><sp/>{</highlight></codeline>
<codeline lineno="7" refid="class_compatibility_list_1a2b6ab701b2b867d0e802fd3b35b11565" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_compatibility_list_1a2b6ab701b2b867d0e802fd3b35b11565" kindref="member">capacity</ref>;</highlight></codeline>
<codeline lineno="8" refid="class_compatibility_list_1a71b295c2a2dd599cadf6724615f97619" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_compatibility_list_1a71b295c2a2dd599cadf6724615f97619" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="9" refid="class_compatibility_list_1a76fcf2c888d5435b89124e9ec5d4402a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_string" kindref="compound">String</ref>*<sp/><ref refid="class_compatibility_list_1a76fcf2c888d5435b89124e9ec5d4402a" kindref="member">list</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11" refid="class_compatibility_list_1a077f7dc792a5419fbd9a0d105133cfbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_compatibility_list_1a077f7dc792a5419fbd9a0d105133cfbd" kindref="member">CompatibilityList</ref>()<sp/>:<ref refid="class_compatibility_list_1a71b295c2a2dd599cadf6724615f97619" kindref="member">size</ref>(0),<sp/><ref refid="class_compatibility_list_1a2b6ab701b2b867d0e802fd3b35b11565" kindref="member">capacity</ref>(1)<sp/>{<sp/><ref refid="class_compatibility_list_1a76fcf2c888d5435b89124e9ec5d4402a" kindref="member">list</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_string" kindref="compound">String</ref>[<ref refid="class_compatibility_list_1a2b6ab701b2b867d0e802fd3b35b11565" kindref="member">capacity</ref>];<sp/>}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_compatibility_list_1a077f7dc792a5419fbd9a0d105133cfbd" kindref="member">CompatibilityList</ref>(<ref refid="class_string" kindref="compound">String</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="class_compatibility_list_1ac3f2eebda805a5b587c498a4915161fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_compatibility_list_1ac3f2eebda805a5b587c498a4915161fc" kindref="member">~CompatibilityList</ref>()<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/><ref refid="class_compatibility_list_1a76fcf2c888d5435b89124e9ec5d4402a" kindref="member">list</ref>;<sp/>}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="class_compatibility_list_1a1fbb37dc96c89c113a03624445480a68" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_compatibility_list_1a1fbb37dc96c89c113a03624445480a68" kindref="member">get_length</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_compatibility_list_1a71b295c2a2dd599cadf6724615f97619" kindref="member">size</ref>;<sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="class_compatibility_list_1abb51e26ec0d83fff36553fe0e6712c48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_string" kindref="compound">String</ref>*<sp/><ref refid="class_compatibility_list_1abb51e26ec0d83fff36553fe0e6712c48" kindref="member">get_listp</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_compatibility_list_1a76fcf2c888d5435b89124e9ec5d4402a" kindref="member">list</ref>;<sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_compatibility_list_1a7d9dbeada758ed1fc4849d77058ff69d" kindref="member">addItems</ref>(<ref refid="class_string" kindref="compound">String</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="class_compatibility_list_1a3836f2aaefc1753287dd4d6052e17469" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_compatibility_list_1a3836f2aaefc1753287dd4d6052e17469" kindref="member">operator==</ref>(<ref refid="class_string" kindref="compound">String</ref><sp/>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_compatibility_list_1a71b295c2a2dd599cadf6724615f97619" kindref="member">size</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*(<ref refid="class_compatibility_list_1a76fcf2c888d5435b89124e9ec5d4402a" kindref="member">list</ref><sp/>+<sp/>i)<sp/>==<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_compatibility_list_1ad476ceb7026c6316112d5f11b283357e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_compatibility_list_1ad476ceb7026c6316112d5f11b283357e" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_compatibility_list_1a71b295c2a2dd599cadf6724615f97619" kindref="member">size</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*(<ref refid="class_compatibility_list_1a76fcf2c888d5435b89124e9ec5d4402a" kindref="member">list</ref><sp/>+<sp/>i)<sp/>==<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal">};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">std::ostream&amp;<sp/><ref refid="_compatibility_8h_1a4dba78c90980468354692db49af6847b" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_compatibility_list" kindref="compound">CompatibilityList</ref>&amp;<sp/>cl);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1<sp/>=<sp/>String,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2<sp/>=<sp/>String&gt;</highlight></codeline>
<codeline lineno="44" refid="_compatibility_8h_1ae30040cca6deee0e7e5b61b08de81637" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_compatibility_8h_1ae30040cca6deee0e7e5b61b08de81637" kindref="member">compatible</ref>(T1<sp/>is,<sp/>T2<sp/>with,<sp/><ref refid="class_compatibility_list" kindref="compound">CompatibilityList</ref><sp/>cl)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/><sp/>switch<sp/>(is)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/><sp/>default:</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw<sp/>std::logic_error(&quot;incompatible&quot;);</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>&quot;Intel&quot;:</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>&quot;intel&quot;:</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(true)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw<sp/>std::logic_error(&quot;incompatible&quot;);</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Compatibility.h"/>
  </compounddef>
</doxygen>
