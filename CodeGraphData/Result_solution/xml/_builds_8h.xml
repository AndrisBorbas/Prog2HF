<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_builds_8h" kind="file">
    <compoundname>Builds.h</compoundname>
    <includes refid="_parts_8h" local="yes">Parts.h</includes>
    <includedby refid="main_8h" local="yes">C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/main.h</includedby>
    <includedby refid="_builds_8cpp" local="yes">C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Builds.cpp</includedby>
    <incdepgraph>
      <node id="48">
        <label>Compatibility.h</label>
        <link refid="_compatibility_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>schtring.h</label>
        <link refid="schtring_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>cctype</label>
      </node>
      <node id="45">
        <label>iostream</label>
      </node>
      <node id="47">
        <label>ctype.h</label>
      </node>
      <node id="43">
        <label>Parts.h</label>
        <link refid="_parts_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Builds.h</label>
        <link refid="Builds.h"/>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="52">
        <label>C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/atest.h</label>
        <link refid="atest_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/main.h</label>
        <link refid="main_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/atest.cpp</label>
        <link refid="atest_8cpp"/>
      </node>
      <node id="50">
        <label>C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Builds.h</label>
        <link refid="Builds.h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="55">
        <label>C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Builds.cpp</label>
        <link refid="_builds_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_build" prot="public">Build</innerclass>
    <innerclass refid="class_orders" prot="public">Orders</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="_builds_8h_1a8dc72915bcebaea777be339661524cb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Build &amp;b)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="class_build" kindref="compound">Build</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Builds.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_builds_8h_1a5fb6be27fb40218ba8338cb8727178cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Orders &amp;o)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="class_orders" kindref="compound">Orders</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Builds.h" line="64" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_parts_8h" kindref="compound">Parts.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="class_build" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_build" kindref="compound">Build</ref><sp/>{</highlight></codeline>
<codeline lineno="6" refid="class_build_1a4297537483b2965d3d4a3a74e9c90805" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_part" kindref="compound">Part</ref>**<sp/><ref refid="class_build_1a4297537483b2965d3d4a3a74e9c90805" kindref="member">components</ref>;</highlight></codeline>
<codeline lineno="7" refid="class_build_1ab50572698466acc1e2681dfa6b878c05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="class_build_1ab50572698466acc1e2681dfa6b878c05" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="8" refid="class_build_1afbe78494802a8a80b966508be8d7da2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_build_1afbe78494802a8a80b966508be8d7da2b" kindref="member">capacity</ref>;</highlight></codeline>
<codeline lineno="9" refid="class_build_1a44526f794449c6cf417d059991e45ff6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_build_1a44526f794449c6cf417d059991e45ff6" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11" refid="class_build_1ab9b72c3479d483c0b452af30bb544de8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_build_1ab9b72c3479d483c0b452af30bb544de8" kindref="member">Build</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_build_1afbe78494802a8a80b966508be8d7da2b" kindref="member">capacity</ref><sp/>=<sp/>7)<sp/>:<ref refid="class_build_1afbe78494802a8a80b966508be8d7da2b" kindref="member">capacity</ref>(<ref refid="class_build_1afbe78494802a8a80b966508be8d7da2b" kindref="member">capacity</ref>),<sp/><ref refid="class_build_1a44526f794449c6cf417d059991e45ff6" kindref="member">size</ref>(0)<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_build_1a4297537483b2965d3d4a3a74e9c90805" kindref="member">components</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_part" kindref="compound">Part</ref><sp/>*<sp/>[<ref refid="class_build_1afbe78494802a8a80b966508be8d7da2b" kindref="member">capacity</ref>];</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_build_1ab50572698466acc1e2681dfa6b878c05" kindref="member">count</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[<ref refid="class_build_1afbe78494802a8a80b966508be8d7da2b" kindref="member">capacity</ref>];</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15" refid="class_build_1a8f1d400e9bc158b6339cc1785b18d07b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_build_1a8f1d400e9bc158b6339cc1785b18d07b" kindref="member">~Build</ref>()<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_build_1a44526f794449c6cf417d059991e45ff6" kindref="member">size</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_build_1a4297537483b2965d3d4a3a74e9c90805" kindref="member">components</ref>[i];</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/><ref refid="class_build_1a4297537483b2965d3d4a3a74e9c90805" kindref="member">components</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/><ref refid="class_build_1ab50572698466acc1e2681dfa6b878c05" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_build_1aba0548391a8c613ed2a9d81d4d3b2a4b" kindref="member">push_back</ref>(T*<sp/>part);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="class_build_1abc05ac7410f21e70124b03513298fef0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_part" kindref="compound">Part</ref>*<sp/><ref refid="class_build_1abc05ac7410f21e70124b03513298fef0" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_build_1a4297537483b2965d3d4a3a74e9c90805" kindref="member">components</ref>[idx];</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29" refid="class_build_1aa48e871d88c60272ab5f6cd5b97aaad0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_part" kindref="compound">Part</ref>*<sp/><ref refid="class_build_1aa48e871d88c60272ab5f6cd5b97aaad0" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_build_1a4297537483b2965d3d4a3a74e9c90805" kindref="member">components</ref>[idx];</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">std::ostream&amp;<sp/><ref refid="_builds_8h_1a8dc72915bcebaea777be339661524cb9" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_build" kindref="compound">Build</ref>&amp;<sp/>b);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="class_orders" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_orders" kindref="compound">Orders</ref><sp/>{</highlight></codeline>
<codeline lineno="38" refid="class_orders_1a7eaf9e8d321fe94f433e40a3c29e332c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_build" kindref="compound">Build</ref>*<sp/><ref refid="class_orders_1a7eaf9e8d321fe94f433e40a3c29e332c" kindref="member">builds</ref>;</highlight></codeline>
<codeline lineno="39" refid="class_orders_1a45c51cd6b077b459f29f4931511568cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/><ref refid="class_orders_1a45c51cd6b077b459f29f4931511568cd" kindref="member">completed</ref>;</highlight></codeline>
<codeline lineno="40" refid="class_orders_1a60e58b1f066c216078f5670f9629d2f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_orders_1a60e58b1f066c216078f5670f9629d2f2" kindref="member">capacity</ref>;</highlight></codeline>
<codeline lineno="41" refid="class_orders_1ab1fd08a1c2760cb8479b82fc38809596" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_orders_1ab1fd08a1c2760cb8479b82fc38809596" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43" refid="class_orders_1aa52a641a269671bbf68637e0771e8b5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_orders_1aa52a641a269671bbf68637e0771e8b5d" kindref="member">Orders</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_orders_1a60e58b1f066c216078f5670f9629d2f2" kindref="member">capacity</ref><sp/>=<sp/>1)<sp/>:<ref refid="class_orders_1a60e58b1f066c216078f5670f9629d2f2" kindref="member">capacity</ref>(<ref refid="class_orders_1a60e58b1f066c216078f5670f9629d2f2" kindref="member">capacity</ref>),<sp/><ref refid="class_orders_1ab1fd08a1c2760cb8479b82fc38809596" kindref="member">size</ref>(0)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orders_1a7eaf9e8d321fe94f433e40a3c29e332c" kindref="member">builds</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_build" kindref="compound">Build</ref>[<ref refid="class_orders_1a60e58b1f066c216078f5670f9629d2f2" kindref="member">capacity</ref>];</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orders_1a45c51cd6b077b459f29f4931511568cd" kindref="member">completed</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">[<ref refid="class_orders_1a60e58b1f066c216078f5670f9629d2f2" kindref="member">capacity</ref>]<sp/>{</highlight><highlight class="keyword">false</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47" refid="class_orders_1a12bcbd0cd430b51f65f651fddad3f662" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_orders_1a12bcbd0cd430b51f65f651fddad3f662" kindref="member">~Orders</ref>()<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/><ref refid="class_orders_1a7eaf9e8d321fe94f433e40a3c29e332c" kindref="member">builds</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/><ref refid="class_orders_1a45c51cd6b077b459f29f4931511568cd" kindref="member">completed</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orders_1a678969b0e57fd41f4ab0cc949d4500f6" kindref="member">push_back</ref>(T*<sp/>part);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="class_orders_1ab383739890f4cbc21eb22cdaf747b8d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_build" kindref="compound">Build</ref><sp/><ref refid="class_orders_1ab383739890f4cbc21eb22cdaf747b8d2" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orders_1a7eaf9e8d321fe94f433e40a3c29e332c" kindref="member">builds</ref>[idx];</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58" refid="class_orders_1abae5fb4a0e7dfa2c222215850531d695" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_build" kindref="compound">Build</ref><sp/><ref refid="class_orders_1abae5fb4a0e7dfa2c222215850531d695" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orders_1a7eaf9e8d321fe94f433e40a3c29e332c" kindref="member">builds</ref>[idx];</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">std::ostream&amp;<sp/><ref refid="_builds_8h_1a8dc72915bcebaea777be339661524cb9" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_orders" kindref="compound">Orders</ref>&amp;<sp/>o);</highlight></codeline>
    </programlisting>
    <location file="C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Builds.h"/>
  </compounddef>
</doxygen>
