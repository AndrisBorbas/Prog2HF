<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_inventory_8h" kind="file">
    <compoundname>Inventory.h</compoundname>
    <includes refid="_parts_8h" local="yes">Parts.h</includes>
    <includedby refid="main_8h" local="yes">C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/main.h</includedby>
    <includedby refid="_inventory_8cpp" local="yes">C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Inventory.cpp</includedby>
    <incdepgraph>
      <node id="96">
        <label>Compatibility.h</label>
        <link refid="_compatibility_8h"/>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>schtring.h</label>
        <link refid="schtring_8h"/>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Inventory.h</label>
        <link refid="Inventory.h"/>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>cctype</label>
      </node>
      <node id="93">
        <label>iostream</label>
      </node>
      <node id="95">
        <label>ctype.h</label>
      </node>
      <node id="91">
        <label>Parts.h</label>
        <link refid="_parts_8h"/>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="100">
        <label>C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/atest.h</label>
        <link refid="atest_8h"/>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/main.h</label>
        <link refid="main_8h"/>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/atest.cpp</label>
        <link refid="atest_8cpp"/>
      </node>
      <node id="98">
        <label>C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Inventory.h</label>
        <link refid="Inventory.h"/>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Inventory.cpp</label>
        <link refid="_inventory_8cpp"/>
      </node>
      <node id="102">
        <label>C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_inventory" prot="public">Inventory</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_inventory_8h_1abddff37837f171d72a2e16a1448a3943" prot="public" static="no">
        <name>enumPart</name>
        <enumvalue id="_inventory_8h_1abddff37837f171d72a2e16a1448a3943ab32c771bb60dc8b502f65b81eef3bd86" prot="public">
          <name>eInvalid</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_inventory_8h_1abddff37837f171d72a2e16a1448a3943af628daad5f03c68213c8181eb59bd178" prot="public">
          <name>eCPU</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a3a32d863321d2f2062b46d9dd968b7f7" prot="public">
          <name>eGPU</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a648a218f2851134fdbddf38c73009cbe" prot="public">
          <name>eMOBO</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_inventory_8h_1abddff37837f171d72a2e16a1448a3943ab8ed3ffb829052bad316bc5bd3563c95" prot="public">
          <name>eRAM</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a7a9e0a3b7edbb259ac104bcdcc146687" prot="public">
          <name>eCase</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a1e9e01992a9c1cfae96b1bf60b946beb" prot="public">
          <name>ePSU</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a47cf1e8f84e82a65f9ecb6d21649b4b4" prot="public">
          <name>eSSD</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a28b188092ec14a7f857b6b0a63185683" prot="public">
          <name>eHDD</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Inventory.h" line="5" column="1" bodyfile="C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Inventory.h" bodystart="5" bodyend="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_inventory_8h_1a160c901d07025ced26495dcba851f700" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_part" kindref="compound">Part</ref> *</type>
        <definition>Part* loadPart</definition>
        <argsstring>(std::istream &amp;is, TempInput &amp;tmp, enum enumPart)</argsstring>
        <name>loadPart</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="struct_temp_input" kindref="compound">TempInput</ref> &amp;</type>
          <declname>tmp</declname>
        </param>
        <param>
          <type>enum</type>
          <declname>enumPart</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Inventory.h" line="59" column="1" bodyfile="C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Inventory.cpp" bodystart="3" bodyend="35"/>
        <references refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a7a9e0a3b7edbb259ac104bcdcc146687" compoundref="_inventory_8h" startline="11">eCase</references>
        <references refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943af628daad5f03c68213c8181eb59bd178" compoundref="_inventory_8h" startline="7">eCPU</references>
        <references refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a3a32d863321d2f2062b46d9dd968b7f7" compoundref="_inventory_8h" startline="8">eGPU</references>
        <references refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a28b188092ec14a7f857b6b0a63185683" compoundref="_inventory_8h" startline="14">eHDD</references>
        <references refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943ab32c771bb60dc8b502f65b81eef3bd86" compoundref="_inventory_8h" startline="6">eInvalid</references>
        <references refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a648a218f2851134fdbddf38c73009cbe" compoundref="_inventory_8h" startline="9">eMOBO</references>
        <references refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a1e9e01992a9c1cfae96b1bf60b946beb" compoundref="_inventory_8h" startline="12">ePSU</references>
        <references refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943ab8ed3ffb829052bad316bc5bd3563c95" compoundref="_inventory_8h" startline="10">eRAM</references>
        <references refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a47cf1e8f84e82a65f9ecb6d21649b4b4" compoundref="_inventory_8h" startline="13">eSSD</references>
        <references refid="_inventory_8cpp_1a027b287b99619c750f30b4765ec929e5" compoundref="_inventory_8cpp" startline="75" endline="172">LoadParams</references>
      </memberdef>
      <memberdef kind="function" id="_inventory_8h_1aa9bc06c48979e6ec21d5fe16ca9b8164" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setEnum</definition>
        <argsstring>(String inst, enum enumPart &amp;)</argsstring>
        <name>setEnum</name>
        <param>
          <type><ref refid="class_string" kindref="compound">String</ref></type>
          <declname>inst</declname>
        </param>
        <param>
          <type>enum <ref refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943" kindref="member">enumPart</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Inventory.h" line="61" column="1" bodyfile="C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Inventory.cpp" bodystart="37" bodyend="73"/>
        <references refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a7a9e0a3b7edbb259ac104bcdcc146687" compoundref="_inventory_8h" startline="11">eCase</references>
        <references refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943af628daad5f03c68213c8181eb59bd178" compoundref="_inventory_8h" startline="7">eCPU</references>
        <references refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a3a32d863321d2f2062b46d9dd968b7f7" compoundref="_inventory_8h" startline="8">eGPU</references>
        <references refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a28b188092ec14a7f857b6b0a63185683" compoundref="_inventory_8h" startline="14">eHDD</references>
        <references refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943ab32c771bb60dc8b502f65b81eef3bd86" compoundref="_inventory_8h" startline="6">eInvalid</references>
        <references refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a648a218f2851134fdbddf38c73009cbe" compoundref="_inventory_8h" startline="9">eMOBO</references>
        <references refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a1e9e01992a9c1cfae96b1bf60b946beb" compoundref="_inventory_8h" startline="12">ePSU</references>
        <references refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943ab8ed3ffb829052bad316bc5bd3563c95" compoundref="_inventory_8h" startline="10">eRAM</references>
        <references refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a47cf1e8f84e82a65f9ecb6d21649b4b4" compoundref="_inventory_8h" startline="13">eSSD</references>
      </memberdef>
      <memberdef kind="function" id="_inventory_8h_1a027b287b99619c750f30b4765ec929e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LoadParams</definition>
        <argsstring>(std::istream &amp;is, TempInput &amp;tmp, int const params)</argsstring>
        <name>LoadParams</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="struct_temp_input" kindref="compound">TempInput</ref> &amp;</type>
          <declname>tmp</declname>
        </param>
        <param>
          <type>int const</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Inventory.h" line="63" column="1" bodyfile="C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Inventory.cpp" bodystart="75" bodyend="172"/>
        <references refid="struct_temp_input_1ae61ec1c3c483e583e4975e5c728e4886" compoundref="_parts_8h" startline="13">TempInput::brand</references>
        <references refid="struct_temp_input_1a29da394f96dae5eaa49e145207362a9c" compoundref="_parts_8h" startline="20">TempInput::chipset</references>
        <references refid="struct_temp_input_1aa76fe14a614fef6e9239ce2283d6b102" compoundref="_parts_8h" startline="17">TempInput::clk</references>
        <references refid="struct_temp_input_1a9b99532e6c984fb19c34ed943a6d5750" compoundref="_parts_8h" startline="18">TempInput::cores</references>
        <references refid="struct_temp_input_1aca0d9830369aab845fc274c6b54ffe33" compoundref="_parts_8h" startline="26">TempInput::flashtype</references>
        <references refid="struct_temp_input_1a402c6984d9e94d4c76e460d0368613f3" compoundref="_parts_8h" startline="21">TempInput::formfactor</references>
        <references refid="struct_temp_input_1a693f4a5b4215b51144174287aecab527" compoundref="_parts_8h" startline="11">TempInput::instruction</references>
        <references refid="class_string_1ae844285e8985e015988e5944cc4e98a6" compoundref="schtring_8h" startline="16" endline="16">String::length</references>
        <references refid="struct_temp_input_1ad8957d3af0ed714844abf3f37cbfc719" compoundref="_parts_8h" startline="19">TempInput::multithreading</references>
        <references refid="struct_temp_input_1a6d049ee814f00b43e1d951317261e357" compoundref="_parts_8h" startline="15">TempInput::price</references>
        <references refid="struct_temp_input_1a75c5e55813802a9d6af6818de81e6001" compoundref="_parts_8h" startline="24">TempInput::readspeed</references>
        <references refid="struct_temp_input_1a661104db14326156bbb2ffa5a7c6f468" compoundref="_parts_8h" startline="27">TempInput::rpm</references>
        <references refid="struct_temp_input_1adfc0eb32fac7de584c3872875b452550" compoundref="_parts_8h" startline="22">TempInput::size</references>
        <references refid="struct_temp_input_1a5142af446776f87e454134511f681887" compoundref="_parts_8h" startline="16">TempInput::socket</references>
        <references refid="struct_temp_input_1a1a73f4b9c84caa8c463a4bad03cf433d" compoundref="_parts_8h" startline="14">TempInput::type</references>
        <references refid="struct_temp_input_1afbaccb88c8eee8a1f4d5d2b6ec692c94" compoundref="_parts_8h" startline="23">TempInput::wattage</references>
        <references refid="struct_temp_input_1a3d5511c959e7c3531ce3bea3a6248d62" compoundref="_parts_8h" startline="25">TempInput::writespeed</references>
        <referencedby refid="_inventory_8h_1a160c901d07025ced26495dcba851f700" compoundref="_inventory_8cpp" startline="3" endline="35">loadPart</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_parts_8h" kindref="compound">Parts.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943" kindref="member">enumPart</ref><sp/>{</highlight></codeline>
<codeline lineno="6" refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943ab32c771bb60dc8b502f65b81eef3bd86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943ab32c771bb60dc8b502f65b81eef3bd86" kindref="member">eInvalid</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="7" refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943af628daad5f03c68213c8181eb59bd178" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943af628daad5f03c68213c8181eb59bd178" kindref="member">eCPU</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="8" refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a3a32d863321d2f2062b46d9dd968b7f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a3a32d863321d2f2062b46d9dd968b7f7" kindref="member">eGPU</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="9" refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a648a218f2851134fdbddf38c73009cbe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a648a218f2851134fdbddf38c73009cbe" kindref="member">eMOBO</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="10" refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943ab8ed3ffb829052bad316bc5bd3563c95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943ab8ed3ffb829052bad316bc5bd3563c95" kindref="member">eRAM</ref><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="11" refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a7a9e0a3b7edbb259ac104bcdcc146687" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a7a9e0a3b7edbb259ac104bcdcc146687" kindref="member">eCase</ref><sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="12" refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a1e9e01992a9c1cfae96b1bf60b946beb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a1e9e01992a9c1cfae96b1bf60b946beb" kindref="member">ePSU</ref><sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="13" refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a47cf1e8f84e82a65f9ecb6d21649b4b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a47cf1e8f84e82a65f9ecb6d21649b4b4" kindref="member">eSSD</ref><sp/>=<sp/>7,</highlight></codeline>
<codeline lineno="14" refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a28b188092ec14a7f857b6b0a63185683" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943a28b188092ec14a7f857b6b0a63185683" kindref="member">eHDD</ref><sp/>=<sp/>8</highlight></codeline>
<codeline lineno="15"><highlight class="normal">};</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="class_inventory" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_inventory" kindref="compound">Inventory</ref><sp/>{</highlight></codeline>
<codeline lineno="18" refid="class_inventory_1a7cc4b98870c1568db9f98c6779097c3f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_part" kindref="compound">Part</ref>**<sp/><ref refid="class_inventory_1a7cc4b98870c1568db9f98c6779097c3f" kindref="member">stock</ref>;</highlight></codeline>
<codeline lineno="19" refid="class_inventory_1a1fa3711f1c96bb18d3d79cace3a639ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_inventory_1a1fa3711f1c96bb18d3d79cace3a639ff" kindref="member">capacity</ref>;</highlight></codeline>
<codeline lineno="20" refid="class_inventory_1a81264c27a9ab485d4ee021efd55d0e44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_inventory_1a81264c27a9ab485d4ee021efd55d0e44" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22" refid="class_inventory_1af2c8bea3c8fbf97fec4d3f5ffb92f347" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_inventory_1af2c8bea3c8fbf97fec4d3f5ffb92f347" kindref="member">Inventory</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_inventory_1a1fa3711f1c96bb18d3d79cace3a639ff" kindref="member">capacity</ref><sp/>=<sp/>1)<sp/>:<ref refid="class_inventory_1a1fa3711f1c96bb18d3d79cace3a639ff" kindref="member">capacity</ref>(<ref refid="class_inventory_1a1fa3711f1c96bb18d3d79cace3a639ff" kindref="member">capacity</ref>),<sp/><ref refid="class_inventory_1a81264c27a9ab485d4ee021efd55d0e44" kindref="member">size</ref>(0)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_inventory_1a7cc4b98870c1568db9f98c6779097c3f" kindref="member">stock</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_part" kindref="compound">Part</ref><sp/>*<sp/>[<ref refid="class_inventory_1a1fa3711f1c96bb18d3d79cace3a639ff" kindref="member">capacity</ref>];</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25" refid="class_inventory_1a6c6dfcb6d977c74a7abf46809e892e3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_inventory_1a6c6dfcb6d977c74a7abf46809e892e3d" kindref="member">~Inventory</ref>()<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_inventory_1a81264c27a9ab485d4ee021efd55d0e44" kindref="member">size</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_inventory_1a7cc4b98870c1568db9f98c6779097c3f" kindref="member">stock</ref>[i];</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/><ref refid="class_inventory_1a7cc4b98870c1568db9f98c6779097c3f" kindref="member">stock</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_inventory_1a3ccacc9422b01b2c17836ca804bcaafc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_inventory_1a3ccacc9422b01b2c17836ca804bcaafc" kindref="member">get_size</ref>()<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_inventory_1a81264c27a9ab485d4ee021efd55d0e44" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="37" refid="class_inventory_1a90cb96a50ebc28f0de4a009004e9b192" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_inventory_1a90cb96a50ebc28f0de4a009004e9b192" kindref="member">push_back</ref>(T*<sp/>part)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_inventory_1a81264c27a9ab485d4ee021efd55d0e44" kindref="member">size</ref><sp/>==<sp/><ref refid="class_inventory_1a1fa3711f1c96bb18d3d79cace3a639ff" kindref="member">capacity</ref>)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_inventory_1a1fa3711f1c96bb18d3d79cace3a639ff" kindref="member">capacity</ref><sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part" kindref="compound">Part</ref>**<sp/>temp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_part" kindref="compound">Part</ref><sp/>*<sp/>[<ref refid="class_inventory_1a1fa3711f1c96bb18d3d79cace3a639ff" kindref="member">capacity</ref>];</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_inventory_1a81264c27a9ab485d4ee021efd55d0e44" kindref="member">size</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp[i]<sp/>=<sp/><ref refid="class_inventory_1a7cc4b98870c1568db9f98c6779097c3f" kindref="member">stock</ref>[i];</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/><ref refid="class_inventory_1a7cc4b98870c1568db9f98c6779097c3f" kindref="member">stock</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_inventory_1a7cc4b98870c1568db9f98c6779097c3f" kindref="member">stock</ref><sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_inventory_1a7cc4b98870c1568db9f98c6779097c3f" kindref="member">stock</ref>[<ref refid="class_inventory_1a81264c27a9ab485d4ee021efd55d0e44" kindref="member">size</ref>]<sp/>=<sp/>part;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_inventory_1a81264c27a9ab485d4ee021efd55d0e44" kindref="member">size</ref>++;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="class_inventory_1a0943f73610680bfbceb408be137de300" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_part" kindref="compound">Part</ref>*<sp/><ref refid="class_inventory_1a0943f73610680bfbceb408be137de300" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_inventory_1a7cc4b98870c1568db9f98c6779097c3f" kindref="member">stock</ref>[idx];</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54" refid="class_inventory_1a86601b8ee999e78cdeea83431bab8f33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_part" kindref="compound">Part</ref>*<sp/><ref refid="class_inventory_1a86601b8ee999e78cdeea83431bab8f33" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_inventory_1a7cc4b98870c1568db9f98c6779097c3f" kindref="member">stock</ref>[idx];</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal">};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><ref refid="class_part" kindref="compound">Part</ref>*<sp/><ref refid="_inventory_8h_1a160c901d07025ced26495dcba851f700" kindref="member">loadPart</ref>(std::istream&amp;<sp/>is,<sp/><ref refid="struct_temp_input" kindref="compound">TempInput</ref>&amp;<sp/>tmp,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943" kindref="member">enumPart</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_inventory_8h_1aa9bc06c48979e6ec21d5fe16ca9b8164" kindref="member">setEnum</ref>(<ref refid="class_string" kindref="compound">String</ref><sp/>inst,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_inventory_8h_1abddff37837f171d72a2e16a1448a3943" kindref="member">enumPart</ref>&amp;);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_inventory_8h_1a027b287b99619c750f30b4765ec929e5" kindref="member">LoadParams</ref>(std::istream&amp;<sp/>is,<sp/><ref refid="struct_temp_input" kindref="compound">TempInput</ref>&amp;<sp/>tmp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>params);</highlight></codeline>
    </programlisting>
    <location file="C:/Users/cxl20/Documents/Visual Studio 2017/Prog2HF/Prog2HF/Inventory.h"/>
  </compounddef>
</doxygen>
